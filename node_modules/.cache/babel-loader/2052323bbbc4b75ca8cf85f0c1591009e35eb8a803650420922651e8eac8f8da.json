{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\AC IS\\\\Cursuri Seminare Laboratoare\\\\An IV\\\\Licenta\\\\Proiect_Interfata1\\\\proiect_interfata1\\\\src\\\\Pages\\\\afterLogIn\\\\medicHome\\\\Pages\\\\ProgramariMedic\\\\ProgramariMedic.js\",\n  _s = $RefreshSig$();\n// ProgramariMedic.js\n\nimport React, { useState } from 'react';\nimport classes from './ProgramariMedic.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgramariMedic = () => {\n  _s();\n  const [appointments, setAppointments] = useState([{\n    id: 1,\n    doctor: 'Dr. Smith',\n    date: '2022-03-15',\n    field: 'Cardiology',\n    reasonForCheckup: 'Chest pain',\n    services: ['EKG', 'Blood test'],\n    diagnosticPDF: null,\n    prescriptionPDF: null\n  }\n  // Add more appointments as needed\n  ]);\n\n  const handleConsultationDone = appointmentId => {\n    // Logic to mark consultation as done for the given appointment ID\n    console.log(`Consultation with ID ${appointmentId} marked as done.`);\n  };\n  const handleDiagnosticPDFUpload = (event, appointmentId) => {\n    // Logic to handle diagnostic PDF upload for the given appointment ID\n    const file = event.target.files[0];\n    console.log(`Uploading diagnostic PDF for consultation with ID ${appointmentId}:`, file);\n  };\n  const handlePrescriptionPDFUpload = (event, appointmentId) => {\n    // Logic to handle prescription PDF upload for the given appointment ID\n    const file = event.target.files[0];\n    console.log(`Uploading prescription PDF for consultation with ID ${appointmentId}:`, file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.programarimedicContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `${classes.titleBackground} ${classes.programarimedicTitle}`,\n      children: \"Programari Medic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.appointmentItem,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.appointmentDoctor,\n          children: appointment.doctor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.appointmentDate,\n          children: [\"Date: \", appointment.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.appointmentField,\n          children: [\"Field: \", appointment.field]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Reason for Checkup: \", appointment.reasonForCheckup]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Services: \", appointment.services.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.detailsSection,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.uploadButtonLabel,\n          children: [\"Upload Diagnostic PDF\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".pdf\",\n            onChange: event => handleDiagnosticPDFUpload(event, appointment.id),\n            className: classes.uploadButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.uploadButtonLabel,\n          children: [\"Upload Prescription PDF\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".pdf\",\n            onChange: event => handlePrescriptionPDFUpload(event, appointment.id),\n            className: classes.uploadButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleConsultationDone(appointment.id),\n        className: classes.markAsDoneButton,\n        children: \"Mark as Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, appointment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => window.history.back(),\n      className: classes.closeButton,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(ProgramariMedic, \"T9FRAe9S3z7c0y+oBwOKvnwF+2c=\");\n_c = ProgramariMedic;\nexport default ProgramariMedic;\nvar _c;\n$RefreshReg$(_c, \"ProgramariMedic\");","map":{"version":3,"names":["React","useState","classes","jsxDEV","_jsxDEV","ProgramariMedic","_s","appointments","setAppointments","id","doctor","date","field","reasonForCheckup","services","diagnosticPDF","prescriptionPDF","handleConsultationDone","appointmentId","console","log","handleDiagnosticPDFUpload","event","file","target","files","handlePrescriptionPDFUpload","className","programarimedicContainer","children","titleBackground","programarimedicTitle","fileName","_jsxFileName","lineNumber","columnNumber","map","appointment","appointmentItem","appointmentDoctor","appointmentDate","appointmentField","join","detailsSection","uploadButtonLabel","type","accept","onChange","uploadButton","onClick","markAsDoneButton","window","history","back","closeButton","_c","$RefreshReg$"],"sources":["C:/Users/alexa/Desktop/AC IS/Cursuri Seminare Laboratoare/An IV/Licenta/Proiect_Interfata1/proiect_interfata1/src/Pages/afterLogIn/medicHome/Pages/ProgramariMedic/ProgramariMedic.js"],"sourcesContent":["// ProgramariMedic.js\r\n\r\nimport React, { useState } from 'react';\r\nimport classes from './ProgramariMedic.module.css';\r\n\r\nconst ProgramariMedic = () => {\r\n    const [appointments, setAppointments] = useState([\r\n        {\r\n            id: 1,\r\n            doctor: 'Dr. Smith',\r\n            date: '2022-03-15',\r\n            field: 'Cardiology',\r\n            reasonForCheckup: 'Chest pain',\r\n            services: ['EKG', 'Blood test'],\r\n            diagnosticPDF: null,\r\n            prescriptionPDF: null,\r\n        },\r\n        // Add more appointments as needed\r\n    ]);\r\n\r\n    const handleConsultationDone = (appointmentId) => {\r\n        // Logic to mark consultation as done for the given appointment ID\r\n        console.log(`Consultation with ID ${appointmentId} marked as done.`);\r\n    };\r\n\r\n    const handleDiagnosticPDFUpload = (event, appointmentId) => {\r\n        // Logic to handle diagnostic PDF upload for the given appointment ID\r\n        const file = event.target.files[0];\r\n        console.log(`Uploading diagnostic PDF for consultation with ID ${appointmentId}:`, file);\r\n    };\r\n\r\n    const handlePrescriptionPDFUpload = (event, appointmentId) => {\r\n        // Logic to handle prescription PDF upload for the given appointment ID\r\n        const file = event.target.files[0];\r\n        console.log(`Uploading prescription PDF for consultation with ID ${appointmentId}:`, file);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.programarimedicContainer}>\r\n            <h2 className={`${classes.titleBackground} ${classes.programarimedicTitle}`}>\r\n                Programari Medic\r\n            </h2>\r\n\r\n            {appointments.map((appointment) => (\r\n                <div key={appointment.id} className={classes.appointmentItem}>\r\n                    <div>\r\n                        <h3 className={classes.appointmentDoctor}>{appointment.doctor}</h3>\r\n                        <p className={classes.appointmentDate}>Date: {appointment.date}</p>\r\n                        <p className={classes.appointmentField}>Field: {appointment.field}</p>\r\n                        <p>Reason for Checkup: {appointment.reasonForCheckup}</p>\r\n                        <p>Services: {appointment.services.join(', ')}</p>\r\n                    </div>\r\n\r\n                    <div className={classes.detailsSection}>\r\n                        <label className={classes.uploadButtonLabel}>\r\n                            Upload Diagnostic PDF\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\".pdf\"\r\n                                onChange={(event) => handleDiagnosticPDFUpload(event, appointment.id)}\r\n                                className={classes.uploadButton}\r\n                            />\r\n                        </label>\r\n                        <label className={classes.uploadButtonLabel}>\r\n                            Upload Prescription PDF\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\".pdf\"\r\n                                onChange={(event) => handlePrescriptionPDFUpload(event, appointment.id)}\r\n                                className={classes.uploadButton}\r\n                            />\r\n                        </label>\r\n                    </div>\r\n\r\n                    <button\r\n                        onClick={() => handleConsultationDone(appointment.id)}\r\n                        className={classes.markAsDoneButton}\r\n                    >\r\n                        Mark as Done\r\n                    </button>\r\n                </div>\r\n            ))}\r\n\r\n            <button onClick={() => window.history.back()} className={classes.closeButton}>\r\n                Close\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgramariMedic;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,CAC7C;IACIQ,EAAE,EAAE,CAAC;IACLC,MAAM,EAAE,WAAW;IACnBC,IAAI,EAAE,YAAY;IAClBC,KAAK,EAAE,YAAY;IACnBC,gBAAgB,EAAE,YAAY;IAC9BC,QAAQ,EAAE,CAAC,KAAK,EAAE,YAAY,CAAC;IAC/BC,aAAa,EAAE,IAAI;IACnBC,eAAe,EAAE;EACrB;EACA;EAAA,CACH,CAAC;;EAEF,MAAMC,sBAAsB,GAAIC,aAAa,IAAK;IAC9C;IACAC,OAAO,CAACC,GAAG,CAAE,wBAAuBF,aAAc,kBAAiB,CAAC;EACxE,CAAC;EAED,MAAMG,yBAAyB,GAAGA,CAACC,KAAK,EAAEJ,aAAa,KAAK;IACxD;IACA,MAAMK,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCN,OAAO,CAACC,GAAG,CAAE,qDAAoDF,aAAc,GAAE,EAAEK,IAAI,CAAC;EAC5F,CAAC;EAED,MAAMG,2BAA2B,GAAGA,CAACJ,KAAK,EAAEJ,aAAa,KAAK;IAC1D;IACA,MAAMK,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCN,OAAO,CAACC,GAAG,CAAE,uDAAsDF,aAAc,GAAE,EAAEK,IAAI,CAAC;EAC9F,CAAC;EAED,oBACInB,OAAA;IAAKuB,SAAS,EAAEzB,OAAO,CAAC0B,wBAAyB;IAAAC,QAAA,gBAC7CzB,OAAA;MAAIuB,SAAS,EAAG,GAAEzB,OAAO,CAAC4B,eAAgB,IAAG5B,OAAO,CAAC6B,oBAAqB,EAAE;MAAAF,QAAA,EAAC;IAE7E;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEJ5B,YAAY,CAAC6B,GAAG,CAAEC,WAAW,iBAC1BjC,OAAA;MAA0BuB,SAAS,EAAEzB,OAAO,CAACoC,eAAgB;MAAAT,QAAA,gBACzDzB,OAAA;QAAAyB,QAAA,gBACIzB,OAAA;UAAIuB,SAAS,EAAEzB,OAAO,CAACqC,iBAAkB;UAAAV,QAAA,EAAEQ,WAAW,CAAC3B;QAAM;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnE/B,OAAA;UAAGuB,SAAS,EAAEzB,OAAO,CAACsC,eAAgB;UAAAX,QAAA,GAAC,QAAM,EAACQ,WAAW,CAAC1B,IAAI;QAAA;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnE/B,OAAA;UAAGuB,SAAS,EAAEzB,OAAO,CAACuC,gBAAiB;UAAAZ,QAAA,GAAC,SAAO,EAACQ,WAAW,CAACzB,KAAK;QAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtE/B,OAAA;UAAAyB,QAAA,GAAG,sBAAoB,EAACQ,WAAW,CAACxB,gBAAgB;QAAA;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzD/B,OAAA;UAAAyB,QAAA,GAAG,YAAU,EAACQ,WAAW,CAACvB,QAAQ,CAAC4B,IAAI,CAAC,IAAI,CAAC;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eAEN/B,OAAA;QAAKuB,SAAS,EAAEzB,OAAO,CAACyC,cAAe;QAAAd,QAAA,gBACnCzB,OAAA;UAAOuB,SAAS,EAAEzB,OAAO,CAAC0C,iBAAkB;UAAAf,QAAA,GAAC,uBAEzC,eAAAzB,OAAA;YACIyC,IAAI,EAAC,MAAM;YACXC,MAAM,EAAC,MAAM;YACbC,QAAQ,EAAGzB,KAAK,IAAKD,yBAAyB,CAACC,KAAK,EAAEe,WAAW,CAAC5B,EAAE,CAAE;YACtEkB,SAAS,EAAEzB,OAAO,CAAC8C;UAAa;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACR/B,OAAA;UAAOuB,SAAS,EAAEzB,OAAO,CAAC0C,iBAAkB;UAAAf,QAAA,GAAC,yBAEzC,eAAAzB,OAAA;YACIyC,IAAI,EAAC,MAAM;YACXC,MAAM,EAAC,MAAM;YACbC,QAAQ,EAAGzB,KAAK,IAAKI,2BAA2B,CAACJ,KAAK,EAAEe,WAAW,CAAC5B,EAAE,CAAE;YACxEkB,SAAS,EAAEzB,OAAO,CAAC8C;UAAa;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAEN/B,OAAA;QACI6C,OAAO,EAAEA,CAAA,KAAMhC,sBAAsB,CAACoB,WAAW,CAAC5B,EAAE,CAAE;QACtDkB,SAAS,EAAEzB,OAAO,CAACgD,gBAAiB;QAAArB,QAAA,EACvC;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAnCHE,WAAW,CAAC5B,EAAE;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAoCnB,CACR,CAAC,eAEF/B,OAAA;MAAQ6C,OAAO,EAAEA,CAAA,KAAME,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAAE;MAAC1B,SAAS,EAAEzB,OAAO,CAACoD,WAAY;MAAAzB,QAAA,EAAC;IAE9E;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAC7B,EAAA,CAnFID,eAAe;AAAAkD,EAAA,GAAflD,eAAe;AAqFrB,eAAeA,eAAe;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}