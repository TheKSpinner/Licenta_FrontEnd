{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\AC IS\\\\Cursuri Seminare Laboratoare\\\\An IV\\\\Licenta\\\\Proiect_Interfata1\\\\proiect_interfata1\\\\src\\\\Pages\\\\afterLogIn\\\\medicHome\\\\Pages\\\\ProgramariMedic\\\\ProgramariMedic.js\",\n  _s = $RefreshSig$();\n// ProgramariMedic.js\n\nimport React, { useState } from 'react';\nimport classes from './ProgramariMedic.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgramariMedic = () => {\n  _s();\n  const [appointments, setAppointments] = useState([{\n    id: 1,\n    doctor: 'Dr. Smith',\n    date: '2022-03-15',\n    field: 'Cardiology',\n    reasonForCheckup: 'Chest pain',\n    services: ['EKG', 'Blood test'],\n    diagnosticPDF: null,\n    prescriptionPDF: null\n  }\n  // Add more appointments as needed\n  ]);\n\n  const handleConsultationDone = appointmentId => {\n    // Logic to mark consultation as done for the given appointment ID\n    console.log(`Consultation with ID ${appointmentId} marked as done.`);\n  };\n  const handleDiagnosticPDFUpload = appointmentId => {\n    // Logic to upload diagnostic PDF for the given appointment ID\n    console.log(`Uploading diagnostic PDF for consultation with ID ${appointmentId}.`);\n  };\n  const handlePrescriptionPDFUpload = appointmentId => {\n    // Logic to upload prescription PDF for the given appointment ID\n    console.log(`Uploading prescription PDF for consultation with ID ${appointmentId}.`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.programarimedicContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `${classes.titleBackground} ${classes.programarimedicTitle}`,\n      children: \"Programari Medic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.appointmentItem,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.appointmentDoctor,\n          children: appointment.doctor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.appointmentDate,\n          children: [\"Date: \", appointment.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.appointmentField,\n          children: [\"Field: \", appointment.field]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Reason for Checkup: \", appointment.reasonForCheckup]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Services: \", appointment.services.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.detailsSection,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".pdf\",\n          onChange: () => handleDiagnosticPDFUpload(appointment.id),\n          className: classes.uploadButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".pdf\",\n          onChange: () => handlePrescriptionPDFUpload(appointment.id),\n          className: classes.uploadButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleConsultationDone(appointment.id),\n        className: classes.markAsDoneButton,\n        children: \"Mark as Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, appointment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => window.history.back(),\n      className: classes.closeButton,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(ProgramariMedic, \"T9FRAe9S3z7c0y+oBwOKvnwF+2c=\");\n_c = ProgramariMedic;\nexport default ProgramariMedic;\nvar _c;\n$RefreshReg$(_c, \"ProgramariMedic\");","map":{"version":3,"names":["React","useState","classes","jsxDEV","_jsxDEV","ProgramariMedic","_s","appointments","setAppointments","id","doctor","date","field","reasonForCheckup","services","diagnosticPDF","prescriptionPDF","handleConsultationDone","appointmentId","console","log","handleDiagnosticPDFUpload","handlePrescriptionPDFUpload","className","programarimedicContainer","children","titleBackground","programarimedicTitle","fileName","_jsxFileName","lineNumber","columnNumber","map","appointment","appointmentItem","appointmentDoctor","appointmentDate","appointmentField","join","detailsSection","type","accept","onChange","uploadButton","onClick","markAsDoneButton","window","history","back","closeButton","_c","$RefreshReg$"],"sources":["C:/Users/alexa/Desktop/AC IS/Cursuri Seminare Laboratoare/An IV/Licenta/Proiect_Interfata1/proiect_interfata1/src/Pages/afterLogIn/medicHome/Pages/ProgramariMedic/ProgramariMedic.js"],"sourcesContent":["// ProgramariMedic.js\r\n\r\nimport React, { useState } from 'react';\r\nimport classes from './ProgramariMedic.module.css';\r\n\r\nconst ProgramariMedic = () => {\r\n    const [appointments, setAppointments] = useState([\r\n        {\r\n            id: 1,\r\n            doctor: 'Dr. Smith',\r\n            date: '2022-03-15',\r\n            field: 'Cardiology',\r\n            reasonForCheckup: 'Chest pain',\r\n            services: ['EKG', 'Blood test'],\r\n            diagnosticPDF: null,\r\n            prescriptionPDF: null,\r\n        },\r\n        // Add more appointments as needed\r\n    ]);\r\n\r\n    const handleConsultationDone = (appointmentId) => {\r\n        // Logic to mark consultation as done for the given appointment ID\r\n        console.log(`Consultation with ID ${appointmentId} marked as done.`);\r\n    };\r\n\r\n    const handleDiagnosticPDFUpload = (appointmentId) => {\r\n        // Logic to upload diagnostic PDF for the given appointment ID\r\n        console.log(`Uploading diagnostic PDF for consultation with ID ${appointmentId}.`);\r\n    };\r\n\r\n    const handlePrescriptionPDFUpload = (appointmentId) => {\r\n        // Logic to upload prescription PDF for the given appointment ID\r\n        console.log(`Uploading prescription PDF for consultation with ID ${appointmentId}.`);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.programarimedicContainer}>\r\n            <h2 className={`${classes.titleBackground} ${classes.programarimedicTitle}`}>\r\n                Programari Medic\r\n            </h2>\r\n\r\n            {appointments.map((appointment) => (\r\n                <div key={appointment.id} className={classes.appointmentItem}>\r\n                    <div>\r\n                        <h3 className={classes.appointmentDoctor}>{appointment.doctor}</h3>\r\n                        <p className={classes.appointmentDate}>Date: {appointment.date}</p>\r\n                        <p className={classes.appointmentField}>Field: {appointment.field}</p>\r\n                        <p>Reason for Checkup: {appointment.reasonForCheckup}</p>\r\n                        <p>Services: {appointment.services.join(', ')}</p>\r\n                    </div>\r\n\r\n                    <div className={classes.detailsSection}>\r\n                        <input\r\n                            type=\"file\"\r\n                            accept=\".pdf\"\r\n                            onChange={() => handleDiagnosticPDFUpload(appointment.id)}\r\n                            className={classes.uploadButton}\r\n                        />\r\n                        <input\r\n                            type=\"file\"\r\n                            accept=\".pdf\"\r\n                            onChange={() => handlePrescriptionPDFUpload(appointment.id)}\r\n                            className={classes.uploadButton}\r\n                        />\r\n                    </div>\r\n\r\n                    <button\r\n                        onClick={() => handleConsultationDone(appointment.id)}\r\n                        className={classes.markAsDoneButton}\r\n                    >\r\n                        Mark as Done\r\n                    </button>\r\n                </div>\r\n            ))}\r\n\r\n            <button onClick={() => window.history.back()} className={classes.closeButton}>\r\n                Close\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgramariMedic;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}