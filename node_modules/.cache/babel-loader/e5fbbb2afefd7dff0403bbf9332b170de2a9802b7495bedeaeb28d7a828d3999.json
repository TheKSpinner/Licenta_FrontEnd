{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\AC IS\\\\Cursuri Seminare Laboratoare\\\\An IV\\\\Licenta\\\\Proiect_Interfata1\\\\proiect_interfata1\\\\src\\\\Pages\\\\afterLogIn\\\\pacientHome\\\\Pages\\\\Fa o programare\\\\Programeaza.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MedicsList from '../../../../beforeLogIn/Medics/MedicsList'; // Import the MedicsList component\nimport ServicesList from '../../../../beforeLogIn/Services/ServicesList';\nimport classes from '../../../../beforeLogIn/Services/AllServices.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst medics_data = [\n  // ... (your medic data remains unchanged)\n];\nconst services_data = [\n  // ... (your services data remains unchanged)\n];\nfunction AllServices() {\n  _s();\n  const [selectedMedic, setSelectedMedic] = useState(null); // State to store the selected medic\n\n  // Function to handle medic selection\n  const handleMedicSelection = medic => {\n    setSelectedMedic(medic);\n  };\n\n  // Function to reset the selected medic when going back\n  const handleGoBack = () => {\n    setSelectedMedic(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: selectedMedic ?\n    /*#__PURE__*/\n    // Check if a medic is selected\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoBack,\n        className: classes.goBackButton,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.header,\n        children: [\"Select Service for \", selectedMedic.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ServicesList, {\n        services: services_data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.header,\n        children: \"Select Medic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MedicsList, {\n        medics: medics_data,\n        onMedicSelect: handleMedicSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(AllServices, \"W4grnTjSRKoaBNKMScm5UOrOoag=\");\n_c = AllServices;\nexport default AllServices;\nvar _c;\n$RefreshReg$(_c, \"AllServices\");","map":{"version":3,"names":["React","useState","MedicsList","ServicesList","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","medics_data","services_data","AllServices","_s","selectedMedic","setSelectedMedic","handleMedicSelection","medic","handleGoBack","children","onClick","className","goBackButton","fileName","_jsxFileName","lineNumber","columnNumber","header","name","services","medics","onMedicSelect","_c","$RefreshReg$"],"sources":["C:/Users/alexa/Desktop/AC IS/Cursuri Seminare Laboratoare/An IV/Licenta/Proiect_Interfata1/proiect_interfata1/src/Pages/afterLogIn/pacientHome/Pages/Fa o programare/Programeaza.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport MedicsList from '../../../../beforeLogIn/Medics/MedicsList'; // Import the MedicsList component\r\nimport ServicesList from '../../../../beforeLogIn/Services/ServicesList';\r\nimport classes from '../../../../beforeLogIn/Services/AllServices.module.css';\r\n\r\nconst medics_data = [\r\n    // ... (your medic data remains unchanged)\r\n];\r\n\r\nconst services_data = [\r\n    // ... (your services data remains unchanged)\r\n];\r\n\r\nfunction AllServices() {\r\n    const [selectedMedic, setSelectedMedic] = useState(null); // State to store the selected medic\r\n\r\n    // Function to handle medic selection\r\n    const handleMedicSelection = (medic) => {\r\n        setSelectedMedic(medic);\r\n    };\r\n\r\n    // Function to reset the selected medic when going back\r\n    const handleGoBack = () => {\r\n        setSelectedMedic(null);\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            {selectedMedic ? ( // Check if a medic is selected\r\n                <>\r\n                    <button onClick={handleGoBack} className={classes.goBackButton}>\r\n                        Go Back\r\n                    </button>\r\n                    <h1 className={classes.header}>Select Service for {selectedMedic.name}</h1>\r\n                    <ServicesList services={services_data} />\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h1 className={classes.header}>Select Medic</h1>\r\n                    <MedicsList medics={medics_data} onMedicSelect={handleMedicSelection} />\r\n                </>\r\n            )}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default AllServices;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,2CAA2C,CAAC,CAAC;AACpE,OAAOC,YAAY,MAAM,+CAA+C;AACxE,OAAOC,OAAO,MAAM,yDAAyD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9E,MAAMC,WAAW,GAAG;EAChB;AAAA,CACH;AAED,MAAMC,aAAa,GAAG;EAClB;AAAA,CACH;AAED,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1D;EACA,MAAMc,oBAAoB,GAAIC,KAAK,IAAK;IACpCF,gBAAgB,CAACE,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBH,gBAAgB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,oBACIR,OAAA;IAAAY,QAAA,EACKL,aAAa;IAAA;IAAK;IACfP,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACIZ,OAAA;QAAQa,OAAO,EAAEF,YAAa;QAACG,SAAS,EAAEhB,OAAO,CAACiB,YAAa;QAAAH,QAAA,EAAC;MAEhE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTnB,OAAA;QAAIc,SAAS,EAAEhB,OAAO,CAACsB,MAAO;QAAAR,QAAA,GAAC,qBAAmB,EAACL,aAAa,CAACc,IAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3EnB,OAAA,CAACH,YAAY;QAACyB,QAAQ,EAAElB;MAAc;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC3C,CAAC,gBAEHnB,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACIZ,OAAA;QAAIc,SAAS,EAAEhB,OAAO,CAACsB,MAAO;QAAAR,QAAA,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDnB,OAAA,CAACJ,UAAU;QAAC2B,MAAM,EAAEpB,WAAY;QAACqB,aAAa,EAAEf;MAAqB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC1E;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAElB;AAACb,EAAA,CA/BQD,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAiCpB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}