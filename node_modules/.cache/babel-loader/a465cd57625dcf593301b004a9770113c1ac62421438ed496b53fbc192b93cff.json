{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\AC IS\\\\Cursuri Seminare Laboratoare\\\\An IV\\\\Licenta\\\\Proiect_Interfata1\\\\proiect_interfata1\\\\src\\\\Pages\\\\afterLogIn\\\\medicHome\\\\Pages\\\\Pacienti\\\\PatientsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport classes from './AllPatients.module.css';\nimport PatientsList from './PatientsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst patients_data = [{\n  name: 'John Doe',\n  age: 30,\n  lastVisitReason: 'Checkup'\n}, {\n  name: 'Jane Smith',\n  age: 25,\n  lastVisitReason: 'Pain in abdomen'\n}\n// Add more patient data as needed\n];\n\nfunction AllPatients() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const groupPatientsByName = () => {\n    const groupedPatients = {};\n    patients_data.forEach(patient => {\n      const firstLetter = patient.name[0].toUpperCase();\n      if (!groupedPatients[firstLetter]) {\n        groupedPatients[firstLetter] = [];\n      }\n      groupedPatients[firstLetter].push(patient);\n    });\n    return groupedPatients;\n  };\n  const groupedPatients = groupPatientsByName();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.header,\n      children: \"All Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: classes.search,\n      type: \"text\",\n      placeholder: \"Search patients\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), Object.keys(groupedPatients).map(letter => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.title,\n        children: letter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PatientsList, {\n        patients: groupedPatients[letter],\n        searchTerm: searchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, letter, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(AllPatients, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n_c = AllPatients;\nexport default AllPatients;\nvar _c;\n$RefreshReg$(_c, \"AllPatients\");","map":{"version":3,"names":["React","useState","classes","PatientsList","jsxDEV","_jsxDEV","patients_data","name","age","lastVisitReason","AllPatients","_s","searchTerm","setSearchTerm","groupPatientsByName","groupedPatients","forEach","patient","firstLetter","toUpperCase","push","children","className","header","fileName","_jsxFileName","lineNumber","columnNumber","search","type","placeholder","value","onChange","e","target","Object","keys","map","letter","title","patients","_c","$RefreshReg$"],"sources":["C:/Users/alexa/Desktop/AC IS/Cursuri Seminare Laboratoare/An IV/Licenta/Proiect_Interfata1/proiect_interfata1/src/Pages/afterLogIn/medicHome/Pages/Pacienti/PatientsList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport classes from './AllPatients.module.css';\r\nimport PatientsList from './PatientsList';\r\n\r\nconst patients_data = [\r\n    {\r\n        name: 'John Doe',\r\n        age: 30,\r\n        lastVisitReason: 'Checkup',\r\n    },\r\n    {\r\n        name: 'Jane Smith',\r\n        age: 25,\r\n        lastVisitReason: 'Pain in abdomen',\r\n    },\r\n    // Add more patient data as needed\r\n];\r\n\r\nfunction AllPatients() {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const groupPatientsByName = () => {\r\n        const groupedPatients = {};\r\n\r\n        patients_data.forEach((patient) => {\r\n            const firstLetter = patient.name[0].toUpperCase();\r\n            if (!groupedPatients[firstLetter]) {\r\n                groupedPatients[firstLetter] = [];\r\n            }\r\n            groupedPatients[firstLetter].push(patient);\r\n        });\r\n\r\n        return groupedPatients;\r\n    };\r\n\r\n    const groupedPatients = groupPatientsByName();\r\n\r\n    return (\r\n        <section>\r\n            <h1 className={classes.header}>All Patients</h1>\r\n            <input\r\n                className={classes.search}\r\n                type=\"text\"\r\n                placeholder=\"Search patients\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n\r\n            {Object.keys(groupedPatients).map((letter) => (\r\n                <div key={letter}>\r\n                    <h2 className={classes.title}>{letter}</h2>\r\n                    <PatientsList patients={groupedPatients[letter]} searchTerm={searchTerm} />\r\n                </div>\r\n            ))}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default AllPatients;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,aAAa,GAAG,CAClB;EACIC,IAAI,EAAE,UAAU;EAChBC,GAAG,EAAE,EAAE;EACPC,eAAe,EAAE;AACrB,CAAC,EACD;EACIF,IAAI,EAAE,YAAY;EAClBC,GAAG,EAAE,EAAE;EACPC,eAAe,EAAE;AACrB;AACA;AAAA,CACH;;AAED,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMa,mBAAmB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,eAAe,GAAG,CAAC,CAAC;IAE1BT,aAAa,CAACU,OAAO,CAAEC,OAAO,IAAK;MAC/B,MAAMC,WAAW,GAAGD,OAAO,CAACV,IAAI,CAAC,CAAC,CAAC,CAACY,WAAW,CAAC,CAAC;MACjD,IAAI,CAACJ,eAAe,CAACG,WAAW,CAAC,EAAE;QAC/BH,eAAe,CAACG,WAAW,CAAC,GAAG,EAAE;MACrC;MACAH,eAAe,CAACG,WAAW,CAAC,CAACE,IAAI,CAACH,OAAO,CAAC;IAC9C,CAAC,CAAC;IAEF,OAAOF,eAAe;EAC1B,CAAC;EAED,MAAMA,eAAe,GAAGD,mBAAmB,CAAC,CAAC;EAE7C,oBACIT,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAIiB,SAAS,EAAEpB,OAAO,CAACqB,MAAO;MAAAF,QAAA,EAAC;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDtB,OAAA;MACIiB,SAAS,EAAEpB,OAAO,CAAC0B,MAAO;MAC1BC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAEnB,UAAW;MAClBoB,QAAQ,EAAGC,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,EAEDQ,MAAM,CAACC,IAAI,CAACrB,eAAe,CAAC,CAACsB,GAAG,CAAEC,MAAM,iBACrCjC,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAIiB,SAAS,EAAEpB,OAAO,CAACqC,KAAM;QAAAlB,QAAA,EAAEiB;MAAM;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3CtB,OAAA,CAACF,YAAY;QAACqC,QAAQ,EAAEzB,eAAe,CAACuB,MAAM,CAAE;QAAC1B,UAAU,EAAEA;MAAW;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAFrEW,MAAM;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGX,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAElB;AAAChB,EAAA,CAtCQD,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAwCpB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}