{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\AC IS\\\\Cursuri Seminare Laboratoare\\\\An IV\\\\Licenta\\\\Proiect_Interfata1\\\\proiect_interfata1\\\\src\\\\Pages\\\\afterLogIn\\\\medicHome\\\\Pages\\\\ProgramariMedic\\\\ProgramariMedic.js\";\nimport React from 'react';\nimport classes from './ProgramariMedic.module.css'; // Import the CSS module\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgramariMedic = () => {\n  const appointments = [{\n    patientName: 'John Doe',\n    date: '2024-03-01',\n    time: '10:00 AM',\n    reasonForCheckup: 'Regular checkup',\n    services: ['Blood pressure measurement', 'General health assessment']\n  }, {\n    patientName: 'Jane Smith',\n    date: '2024-03-01',\n    time: '11:30 AM',\n    reasonForCheckup: 'Follow-up visit',\n    services: ['Medication adjustment', 'Review of symptoms']\n  }\n  // Add more appointments as needed\n  ];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dashboardContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `${classes.titleBackground} ${classes.dashboardTitle}`,\n      children: \"Upcoming Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.appointmentsList,\n      children: appointments.map((appointment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.appointmentItem,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: appointment.patientName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", appointment.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time: \", appointment.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Reason for Checkup: \", appointment.reasonForCheckup]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Services:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: appointment.services.map((service, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: service\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = ProgramariMedic;\nexport default ProgramariMedic;\nvar _c;\n$RefreshReg$(_c, \"ProgramariMedic\");","map":{"version":3,"names":["React","classes","jsxDEV","_jsxDEV","ProgramariMedic","appointments","patientName","date","time","reasonForCheckup","services","className","dashboardContainer","children","titleBackground","dashboardTitle","fileName","_jsxFileName","lineNumber","columnNumber","appointmentsList","map","appointment","index","appointmentItem","service","i","_c","$RefreshReg$"],"sources":["C:/Users/alexa/Desktop/AC IS/Cursuri Seminare Laboratoare/An IV/Licenta/Proiect_Interfata1/proiect_interfata1/src/Pages/afterLogIn/medicHome/Pages/ProgramariMedic/ProgramariMedic.js"],"sourcesContent":["import React from 'react';\r\nimport classes from './ProgramariMedic.module.css'; // Import the CSS module\r\n\r\nconst ProgramariMedic = () => {\r\n    const appointments = [\r\n        {\r\n            patientName: 'John Doe',\r\n            date: '2024-03-01',\r\n            time: '10:00 AM',\r\n            reasonForCheckup: 'Regular checkup',\r\n            services: ['Blood pressure measurement', 'General health assessment'],\r\n        },\r\n        {\r\n            patientName: 'Jane Smith',\r\n            date: '2024-03-01',\r\n            time: '11:30 AM',\r\n            reasonForCheckup: 'Follow-up visit',\r\n            services: ['Medication adjustment', 'Review of symptoms'],\r\n        },\r\n        // Add more appointments as needed\r\n    ];\r\n\r\n    return (\r\n        <div className={classes.dashboardContainer}>\r\n            <h2 className={`${classes.titleBackground} ${classes.dashboardTitle}`}>Upcoming Appointments</h2>\r\n\r\n            <div className={classes.appointmentsList}>\r\n                {appointments.map((appointment, index) => (\r\n                    <div key={index} className={classes.appointmentItem}>\r\n                        <h3>{appointment.patientName}</h3>\r\n                        <p>Date: {appointment.date}</p>\r\n                        <p>Time: {appointment.time}</p>\r\n                        <p>Reason for Checkup: {appointment.reasonForCheckup}</p>\r\n                        <p>Services:</p>\r\n                        <ul>\r\n                            {appointment.services.map((service, i) => (\r\n                                <li key={i}>{service}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgramariMedic;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC1B,MAAMC,YAAY,GAAG,CACjB;IACIC,WAAW,EAAE,UAAU;IACvBC,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE,UAAU;IAChBC,gBAAgB,EAAE,iBAAiB;IACnCC,QAAQ,EAAE,CAAC,4BAA4B,EAAE,2BAA2B;EACxE,CAAC,EACD;IACIJ,WAAW,EAAE,YAAY;IACzBC,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE,UAAU;IAChBC,gBAAgB,EAAE,iBAAiB;IACnCC,QAAQ,EAAE,CAAC,uBAAuB,EAAE,oBAAoB;EAC5D;EACA;EAAA,CACH;;EAED,oBACIP,OAAA;IAAKQ,SAAS,EAAEV,OAAO,CAACW,kBAAmB;IAAAC,QAAA,gBACvCV,OAAA;MAAIQ,SAAS,EAAG,GAAEV,OAAO,CAACa,eAAgB,IAAGb,OAAO,CAACc,cAAe,EAAE;MAAAF,QAAA,EAAC;IAAqB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjGhB,OAAA;MAAKQ,SAAS,EAAEV,OAAO,CAACmB,gBAAiB;MAAAP,QAAA,EACpCR,YAAY,CAACgB,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,kBACjCpB,OAAA;QAAiBQ,SAAS,EAAEV,OAAO,CAACuB,eAAgB;QAAAX,QAAA,gBAChDV,OAAA;UAAAU,QAAA,EAAKS,WAAW,CAAChB;QAAW;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClChB,OAAA;UAAAU,QAAA,GAAG,QAAM,EAACS,WAAW,CAACf,IAAI;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/BhB,OAAA;UAAAU,QAAA,GAAG,QAAM,EAACS,WAAW,CAACd,IAAI;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/BhB,OAAA;UAAAU,QAAA,GAAG,sBAAoB,EAACS,WAAW,CAACb,gBAAgB;QAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzDhB,OAAA;UAAAU,QAAA,EAAG;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAChBhB,OAAA;UAAAU,QAAA,EACKS,WAAW,CAACZ,QAAQ,CAACW,GAAG,CAAC,CAACI,OAAO,EAAEC,CAAC,kBACjCvB,OAAA;YAAAU,QAAA,EAAaY;UAAO,GAAXC,CAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAC5B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA,GAVCI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACQ,EAAA,GAzCIvB,eAAe;AA2CrB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}