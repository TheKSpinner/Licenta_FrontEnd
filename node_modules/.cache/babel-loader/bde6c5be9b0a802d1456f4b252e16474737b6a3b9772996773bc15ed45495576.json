{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\AC IS\\\\Cursuri Seminare Laboratoare\\\\An IV\\\\Licenta\\\\Proiect_Interfata1\\\\proiect_interfata1\\\\src\\\\Pages\\\\afterLogIn\\\\pacientHome\\\\Pages\\\\Fa o programare\\\\SelectMedic.js\",\n  _s = $RefreshSig$();\n// AllServices.js\n\nimport React, { useState } from 'react';\nimport SelectMedic from './SelectMedic';\nimport SelectMeetingType from './SelectMeetingType';\nimport SelectService from './SelectService';\nimport SelectDateTime from './SelectDateTime';\nimport ServicesList from '../../../../beforeLogIn/Services/ServicesList';\nimport classes from './AllServices.module.css';\nimport services_data from '../../../../beforeLogIn/Services/AllServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllServices() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedMedic, setSelectedMedic] = useState(null);\n  const [meetingType, setMeetingType] = useState('');\n  const [selectedService, setSelectedService] = useState('');\n  const handleNextStep = data => {\n    // Depending on the step, update the state accordingly\n    setSelectedMedic(data.selectedMedic);\n    setMeetingType(data.meetingType);\n    setSelectedService(data.selectedService);\n    // Redirect to the next step/page\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.header,\n      children: \"All Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search services\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      className: classes.search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), !selectedMedic && /*#__PURE__*/_jsxDEV(SelectMedic, {\n      onNext: handleNextStep\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 32\n    }, this), selectedMedic && !meetingType && /*#__PURE__*/_jsxDEV(SelectMeetingType, {\n      onNext: handleNextStep\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 47\n    }, this), selectedMedic && meetingType && !selectedService && /*#__PURE__*/_jsxDEV(SelectService, {\n      onNext: handleNextStep\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), selectedMedic && meetingType && selectedService && /*#__PURE__*/_jsxDEV(SelectDateTime, {\n      onFinish: handleNextStep\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(AllServices, \"hPJP8LZuM+xzlg05kzdEy3o3LQA=\");\n_c = AllServices;\nexport default AllServices;\nvar _c;\n$RefreshReg$(_c, \"AllServices\");","map":{"version":3,"names":["React","useState","SelectMedic","SelectMeetingType","SelectService","SelectDateTime","ServicesList","classes","services_data","jsxDEV","_jsxDEV","AllServices","_s","searchTerm","setSearchTerm","selectedMedic","setSelectedMedic","meetingType","setMeetingType","selectedService","setSelectedService","handleNextStep","data","children","className","header","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","search","onNext","onFinish","_c","$RefreshReg$"],"sources":["C:/Users/alexa/Desktop/AC IS/Cursuri Seminare Laboratoare/An IV/Licenta/Proiect_Interfata1/proiect_interfata1/src/Pages/afterLogIn/pacientHome/Pages/Fa o programare/SelectMedic.js"],"sourcesContent":["// AllServices.js\r\n\r\nimport React, { useState } from 'react';\r\nimport SelectMedic from './SelectMedic';\r\nimport SelectMeetingType from './SelectMeetingType';\r\nimport SelectService from './SelectService';\r\nimport SelectDateTime from './SelectDateTime';\r\nimport ServicesList from '../../../../beforeLogIn/Services/ServicesList';\r\nimport classes from './AllServices.module.css';\r\nimport services_data from '../../../../beforeLogIn/Services/AllServices'\r\n\r\nfunction AllServices() {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedMedic, setSelectedMedic] = useState(null);\r\n    const [meetingType, setMeetingType] = useState('');\r\n    const [selectedService, setSelectedService] = useState('');\r\n\r\n    const handleNextStep = (data) => {\r\n        // Depending on the step, update the state accordingly\r\n        setSelectedMedic(data.selectedMedic);\r\n        setMeetingType(data.meetingType);\r\n        setSelectedService(data.selectedService);\r\n        // Redirect to the next step/page\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            <h1 className={classes.header}>All Services</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search services\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className={classes.search}\r\n            />\r\n\r\n            {/* Render different components based on the selected steps */}\r\n            {!selectedMedic && <SelectMedic onNext={handleNextStep} />}\r\n            {selectedMedic && !meetingType && <SelectMeetingType onNext={handleNextStep} />}\r\n            {selectedMedic && meetingType && !selectedService && (\r\n                <SelectService onNext={handleNextStep} />\r\n            )}\r\n            {selectedMedic && meetingType && selectedService && (\r\n                <SelectDateTime onFinish={handleNextStep} />\r\n            )}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default AllServices;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,YAAY,MAAM,+CAA+C;AACxE,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,aAAa,MAAM,8CAA8C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExE,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMoB,cAAc,GAAIC,IAAI,IAAK;IAC7B;IACAN,gBAAgB,CAACM,IAAI,CAACP,aAAa,CAAC;IACpCG,cAAc,CAACI,IAAI,CAACL,WAAW,CAAC;IAChCG,kBAAkB,CAACE,IAAI,CAACH,eAAe,CAAC;IACxC;EACJ,CAAC;;EAED,oBACIT,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAIc,SAAS,EAAEjB,OAAO,CAACkB,MAAO;MAAAF,QAAA,EAAC;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDnB,OAAA;MACIoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAEnB,UAAW;MAClBoB,QAAQ,EAAGC,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CR,SAAS,EAAEjB,OAAO,CAAC6B;IAAO;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,EAGD,CAACd,aAAa,iBAAIL,OAAA,CAACR,WAAW;MAACmC,MAAM,EAAEhB;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzDd,aAAa,IAAI,CAACE,WAAW,iBAAIP,OAAA,CAACP,iBAAiB;MAACkC,MAAM,EAAEhB;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9Ed,aAAa,IAAIE,WAAW,IAAI,CAACE,eAAe,iBAC7CT,OAAA,CAACN,aAAa;MAACiC,MAAM,EAAEhB;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC3C,EACAd,aAAa,IAAIE,WAAW,IAAIE,eAAe,iBAC5CT,OAAA,CAACL,cAAc;MAACiC,QAAQ,EAAEjB;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC9C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAElB;AAACjB,EAAA,CApCQD,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAsCpB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}