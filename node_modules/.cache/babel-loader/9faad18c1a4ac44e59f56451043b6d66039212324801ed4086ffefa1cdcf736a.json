{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\AC IS\\\\Cursuri Seminare Laboratoare\\\\An IV\\\\Licenta\\\\Proiect_Interfata1\\\\proiect_interfata1\\\\src\\\\Pages\\\\afterLogIn\\\\medicHome\\\\Pages\\\\ProgramariMedic\\\\ProgramariMedic.js\",\n  _s = $RefreshSig$();\n// ProgramariMedic.js\n\nimport React, { useState } from 'react';\nimport Appointment from './Appointment';\nimport classes from './ProgramariMedic.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgramariMedic = () => {\n  _s();\n  const [appointments, setAppointments] = useState([{\n    id: 1,\n    doctor: 'Dr. Smith',\n    date: '2022-03-15',\n    field: 'Cardiology',\n    reasonForCheckup: 'Chest pain',\n    services: ['EKG', 'Blood test'],\n    diagnosticPDF: null,\n    prescriptionPDF: null\n  }\n  // Add more appointments as needed\n  ]);\n\n  const handleConsultationDone = appointmentId => {\n    // Logic to mark consultation as done for the given appointment ID\n    console.log(`Consultation with ID ${appointmentId} marked as done.`);\n  };\n  const handleDiagnosticPDFUpload = appointmentId => {\n    // Logic to upload diagnostic PDF for the given appointment ID\n    console.log(`Uploading diagnostic PDF for consultation with ID ${appointmentId}.`);\n  };\n  const handlePrescriptionPDFUpload = appointmentId => {\n    // Logic to upload prescription PDF for the given appointment ID\n    console.log(`Uploading prescription PDF for consultation with ID ${appointmentId}.`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.programarimedicContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `${classes.titleBackground} ${classes.programarimedicTitle}`,\n      children: \"Programari Medic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), appointments.map(appointment => /*#__PURE__*/_jsxDEV(Appointment, {\n      appointmentData: appointment,\n      onConsultationDone: handleConsultationDone,\n      onDiagnosticPDFUpload: handleDiagnosticPDFUpload,\n      onPrescriptionPDFUpload: handlePrescriptionPDFUpload\n    }, appointment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => window.history.back(),\n      className: classes.closeButton,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(ProgramariMedic, \"T9FRAe9S3z7c0y+oBwOKvnwF+2c=\");\n_c = ProgramariMedic;\nexport default ProgramariMedic;\nvar _c;\n$RefreshReg$(_c, \"ProgramariMedic\");","map":{"version":3,"names":["React","useState","Appointment","classes","jsxDEV","_jsxDEV","ProgramariMedic","_s","appointments","setAppointments","id","doctor","date","field","reasonForCheckup","services","diagnosticPDF","prescriptionPDF","handleConsultationDone","appointmentId","console","log","handleDiagnosticPDFUpload","handlePrescriptionPDFUpload","className","programarimedicContainer","children","titleBackground","programarimedicTitle","fileName","_jsxFileName","lineNumber","columnNumber","map","appointment","appointmentData","onConsultationDone","onDiagnosticPDFUpload","onPrescriptionPDFUpload","onClick","window","history","back","closeButton","_c","$RefreshReg$"],"sources":["C:/Users/alexa/Desktop/AC IS/Cursuri Seminare Laboratoare/An IV/Licenta/Proiect_Interfata1/proiect_interfata1/src/Pages/afterLogIn/medicHome/Pages/ProgramariMedic/ProgramariMedic.js"],"sourcesContent":["// ProgramariMedic.js\r\n\r\nimport React, { useState } from 'react';\r\nimport Appointment from './Appointment';\r\nimport classes from './ProgramariMedic.module.css';\r\n\r\nconst ProgramariMedic = () => {\r\n    const [appointments, setAppointments] = useState([\r\n        {\r\n            id: 1,\r\n            doctor: 'Dr. Smith',\r\n            date: '2022-03-15',\r\n            field: 'Cardiology',\r\n            reasonForCheckup: 'Chest pain',\r\n            services: ['EKG', 'Blood test'],\r\n            diagnosticPDF: null,\r\n            prescriptionPDF: null,\r\n        },\r\n        // Add more appointments as needed\r\n    ]);\r\n\r\n    const handleConsultationDone = (appointmentId) => {\r\n        // Logic to mark consultation as done for the given appointment ID\r\n        console.log(`Consultation with ID ${appointmentId} marked as done.`);\r\n    };\r\n\r\n    const handleDiagnosticPDFUpload = (appointmentId) => {\r\n        // Logic to upload diagnostic PDF for the given appointment ID\r\n        console.log(`Uploading diagnostic PDF for consultation with ID ${appointmentId}.`);\r\n    };\r\n\r\n    const handlePrescriptionPDFUpload = (appointmentId) => {\r\n        // Logic to upload prescription PDF for the given appointment ID\r\n        console.log(`Uploading prescription PDF for consultation with ID ${appointmentId}.`);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.programarimedicContainer}>\r\n            <h2 className={`${classes.titleBackground} ${classes.programarimedicTitle}`}>\r\n                Programari Medic\r\n            </h2>\r\n\r\n            {appointments.map((appointment) => (\r\n                <Appointment\r\n                    key={appointment.id}\r\n                    appointmentData={appointment}\r\n                    onConsultationDone={handleConsultationDone}\r\n                    onDiagnosticPDFUpload={handleDiagnosticPDFUpload}\r\n                    onPrescriptionPDFUpload={handlePrescriptionPDFUpload}\r\n                />\r\n            ))}\r\n\r\n            <button onClick={() => window.history.back()} className={classes.closeButton}>\r\n                Close\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgramariMedic;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,OAAO,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAC7C;IACIS,EAAE,EAAE,CAAC;IACLC,MAAM,EAAE,WAAW;IACnBC,IAAI,EAAE,YAAY;IAClBC,KAAK,EAAE,YAAY;IACnBC,gBAAgB,EAAE,YAAY;IAC9BC,QAAQ,EAAE,CAAC,KAAK,EAAE,YAAY,CAAC;IAC/BC,aAAa,EAAE,IAAI;IACnBC,eAAe,EAAE;EACrB;EACA;EAAA,CACH,CAAC;;EAEF,MAAMC,sBAAsB,GAAIC,aAAa,IAAK;IAC9C;IACAC,OAAO,CAACC,GAAG,CAAE,wBAAuBF,aAAc,kBAAiB,CAAC;EACxE,CAAC;EAED,MAAMG,yBAAyB,GAAIH,aAAa,IAAK;IACjD;IACAC,OAAO,CAACC,GAAG,CAAE,qDAAoDF,aAAc,GAAE,CAAC;EACtF,CAAC;EAED,MAAMI,2BAA2B,GAAIJ,aAAa,IAAK;IACnD;IACAC,OAAO,CAACC,GAAG,CAAE,uDAAsDF,aAAc,GAAE,CAAC;EACxF,CAAC;EAED,oBACId,OAAA;IAAKmB,SAAS,EAAErB,OAAO,CAACsB,wBAAyB;IAAAC,QAAA,gBAC7CrB,OAAA;MAAImB,SAAS,EAAG,GAAErB,OAAO,CAACwB,eAAgB,IAAGxB,OAAO,CAACyB,oBAAqB,EAAE;MAAAF,QAAA,EAAC;IAE7E;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEJxB,YAAY,CAACyB,GAAG,CAAEC,WAAW,iBAC1B7B,OAAA,CAACH,WAAW;MAERiC,eAAe,EAAED,WAAY;MAC7BE,kBAAkB,EAAElB,sBAAuB;MAC3CmB,qBAAqB,EAAEf,yBAA0B;MACjDgB,uBAAuB,EAAEf;IAA4B,GAJhDW,WAAW,CAACxB,EAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKtB,CACJ,CAAC,eAEF3B,OAAA;MAAQkC,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAAE;MAAClB,SAAS,EAAErB,OAAO,CAACwC,WAAY;MAAAjB,QAAA,EAAC;IAE9E;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACzB,EAAA,CAnDID,eAAe;AAAAsC,EAAA,GAAftC,eAAe;AAqDrB,eAAeA,eAAe;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}